{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Python assignment day3","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPX5G66kV/woMyFwjF3Nq/k"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"qLq3Vs94GUoV"},"source":["# use If Else and Elif to print report card"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UFJ3CWpnGZgg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607775922764,"user_tz":-330,"elapsed":1459,"user":{"displayName":"Mohan Prasath","photoUrl":"","userId":"06803691935249848089"}},"outputId":"4fa7c4c8-4e9f-461c-d229-0ea50feb1d8c"},"source":["english_mark=70;maths_mark=90;\n","if english_mark>=90:\n","  print(\"Grade A\")\n","elif english_mark>=50 and english_mark<90:\n","  print(\"Grade B\")\n","else:\n","  print(\"Fail\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Grade B\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fSQH4xyUGcwi"},"source":["# Use for loop and print prime numbers between 1to1000"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"iw2kueCKGjmw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607777047744,"user_tz":-330,"elapsed":2443,"user":{"displayName":"Mohan Prasath","photoUrl":"","userId":"06803691935249848089"}},"outputId":"42fb94b8-04b4-4100-e7e3-12d01a708fd3"},"source":["for number in range (1,1000):\n","   if (number%2)==0:\n","     print(number)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["2\n","4\n","6\n","8\n","10\n","12\n","14\n","16\n","18\n","20\n","22\n","24\n","26\n","28\n","30\n","32\n","34\n","36\n","38\n","40\n","42\n","44\n","46\n","48\n","50\n","52\n","54\n","56\n","58\n","60\n","62\n","64\n","66\n","68\n","70\n","72\n","74\n","76\n","78\n","80\n","82\n","84\n","86\n","88\n","90\n","92\n","94\n","96\n","98\n","100\n","102\n","104\n","106\n","108\n","110\n","112\n","114\n","116\n","118\n","120\n","122\n","124\n","126\n","128\n","130\n","132\n","134\n","136\n","138\n","140\n","142\n","144\n","146\n","148\n","150\n","152\n","154\n","156\n","158\n","160\n","162\n","164\n","166\n","168\n","170\n","172\n","174\n","176\n","178\n","180\n","182\n","184\n","186\n","188\n","190\n","192\n","194\n","196\n","198\n","200\n","202\n","204\n","206\n","208\n","210\n","212\n","214\n","216\n","218\n","220\n","222\n","224\n","226\n","228\n","230\n","232\n","234\n","236\n","238\n","240\n","242\n","244\n","246\n","248\n","250\n","252\n","254\n","256\n","258\n","260\n","262\n","264\n","266\n","268\n","270\n","272\n","274\n","276\n","278\n","280\n","282\n","284\n","286\n","288\n","290\n","292\n","294\n","296\n","298\n","300\n","302\n","304\n","306\n","308\n","310\n","312\n","314\n","316\n","318\n","320\n","322\n","324\n","326\n","328\n","330\n","332\n","334\n","336\n","338\n","340\n","342\n","344\n","346\n","348\n","350\n","352\n","354\n","356\n","358\n","360\n","362\n","364\n","366\n","368\n","370\n","372\n","374\n","376\n","378\n","380\n","382\n","384\n","386\n","388\n","390\n","392\n","394\n","396\n","398\n","400\n","402\n","404\n","406\n","408\n","410\n","412\n","414\n","416\n","418\n","420\n","422\n","424\n","426\n","428\n","430\n","432\n","434\n","436\n","438\n","440\n","442\n","444\n","446\n","448\n","450\n","452\n","454\n","456\n","458\n","460\n","462\n","464\n","466\n","468\n","470\n","472\n","474\n","476\n","478\n","480\n","482\n","484\n","486\n","488\n","490\n","492\n","494\n","496\n","498\n","500\n","502\n","504\n","506\n","508\n","510\n","512\n","514\n","516\n","518\n","520\n","522\n","524\n","526\n","528\n","530\n","532\n","534\n","536\n","538\n","540\n","542\n","544\n","546\n","548\n","550\n","552\n","554\n","556\n","558\n","560\n","562\n","564\n","566\n","568\n","570\n","572\n","574\n","576\n","578\n","580\n","582\n","584\n","586\n","588\n","590\n","592\n","594\n","596\n","598\n","600\n","602\n","604\n","606\n","608\n","610\n","612\n","614\n","616\n","618\n","620\n","622\n","624\n","626\n","628\n","630\n","632\n","634\n","636\n","638\n","640\n","642\n","644\n","646\n","648\n","650\n","652\n","654\n","656\n","658\n","660\n","662\n","664\n","666\n","668\n","670\n","672\n","674\n","676\n","678\n","680\n","682\n","684\n","686\n","688\n","690\n","692\n","694\n","696\n","698\n","700\n","702\n","704\n","706\n","708\n","710\n","712\n","714\n","716\n","718\n","720\n","722\n","724\n","726\n","728\n","730\n","732\n","734\n","736\n","738\n","740\n","742\n","744\n","746\n","748\n","750\n","752\n","754\n","756\n","758\n","760\n","762\n","764\n","766\n","768\n","770\n","772\n","774\n","776\n","778\n","780\n","782\n","784\n","786\n","788\n","790\n","792\n","794\n","796\n","798\n","800\n","802\n","804\n","806\n","808\n","810\n","812\n","814\n","816\n","818\n","820\n","822\n","824\n","826\n","828\n","830\n","832\n","834\n","836\n","838\n","840\n","842\n","844\n","846\n","848\n","850\n","852\n","854\n","856\n","858\n","860\n","862\n","864\n","866\n","868\n","870\n","872\n","874\n","876\n","878\n","880\n","882\n","884\n","886\n","888\n","890\n","892\n","894\n","896\n","898\n","900\n","902\n","904\n","906\n","908\n","910\n","912\n","914\n","916\n","918\n","920\n","922\n","924\n","926\n","928\n","930\n","932\n","934\n","936\n","938\n","940\n","942\n","944\n","946\n","948\n","950\n","952\n","954\n","956\n","958\n","960\n","962\n","964\n","966\n","968\n","970\n","972\n","974\n","976\n","978\n","980\n","982\n","984\n","986\n","988\n","990\n","992\n","994\n","996\n","998\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LJjCJ0ttGxf1"},"source":["#To Tables from 1,10 used Nested for loop"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PT33am1f_DUm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607779504924,"user_tz":-330,"elapsed":1452,"user":{"displayName":"Mohan Prasath","photoUrl":"","userId":"06803691935249848089"}},"outputId":"2ab7f73b-8571-4a9e-bdaa-1c0e3c0bbe94"},"source":["for i in range(1,11):\n","  for j in range(1,11):\n","    print(i*j)\n","  print(  )\n","else :\n","  print (\"Tables is completed\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n","\n","2\n","4\n","6\n","8\n","10\n","12\n","14\n","16\n","18\n","20\n","\n","3\n","6\n","9\n","12\n","15\n","18\n","21\n","24\n","27\n","30\n","\n","4\n","8\n","12\n","16\n","20\n","24\n","28\n","32\n","36\n","40\n","\n","5\n","10\n","15\n","20\n","25\n","30\n","35\n","40\n","45\n","50\n","\n","6\n","12\n","18\n","24\n","30\n","36\n","42\n","48\n","54\n","60\n","\n","7\n","14\n","21\n","28\n","35\n","42\n","49\n","56\n","63\n","70\n","\n","8\n","16\n","24\n","32\n","40\n","48\n","56\n","64\n","72\n","80\n","\n","9\n","18\n","27\n","36\n","45\n","54\n","63\n","72\n","81\n","90\n","\n","10\n","20\n","30\n","40\n","50\n","60\n","70\n","80\n","90\n","100\n","\n","Tables is completed\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7oHR3GEnHHwp"},"source":["#To print X prime numbers using while loop"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HQmd-p4qIUI7","colab":{"base_uri":"https://localhost:8080/","height":972},"executionInfo":{"status":"error","timestamp":1607832787424,"user_tz":-330,"elapsed":7121,"user":{"displayName":"Mohan Prasath","photoUrl":"","userId":"06803691935249848089"}},"outputId":"ed47a8d4-1b76-4ee7-9877-d4c6ae003d31"},"source":[" \n","x=input(\"enter number\")\n","i=2\n","while(i<x):\n","  if x%i==0:\n","    print(i)\n","    i=i+1\n","if(x==0):\n","  print (\"prime number\")\n","else:\n","  print (\"not prime number\")"],"execution_count":13,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    728\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 729\u001b[0;31m                 \u001b[0mident\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdin_socket\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    730\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/jupyter_client/session.py\u001b[0m in \u001b[0;36mrecv\u001b[0;34m(self, socket, mode, content, copy)\u001b[0m\n\u001b[1;32m    802\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 803\u001b[0;31m             \u001b[0mmsg_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msocket\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_multipart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    804\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mzmq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mZMQError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36mrecv_multipart\u001b[0;34m(self, flags, copy, track)\u001b[0m\n\u001b[1;32m    565\u001b[0m         \"\"\"\n\u001b[0;32m--> 566\u001b[0;31m         \u001b[0mparts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    567\u001b[0m         \u001b[0;31m# have first part already, only loop while more to receive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._recv_copy\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: ","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-5b6e1114ee84>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"enter number\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mwhile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m<\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m  \u001b[0;32mif\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m%\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    702\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    703\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 704\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    705\u001b[0m         )\n\u001b[1;32m    706\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    732\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    733\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 734\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    735\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    736\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]}]}